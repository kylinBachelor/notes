#+title: 输入输出
#+author: congpeitong
#+email: congpeitong2022@163.com

* 输入输出流
在 Java API 中，可以从其中读入一个字节序列的对象称作输入流，而可以向其中写入一个字节序列的对象称作输出流。这些字节序列的来源地和目的地
可以是文件，而且通常都是文件，但是也可以是网络连接，甚至是内存块。抽象类InputStream和OutputStream构成了输入和输出类层次结构的基础。

因为面向字节的流不便于处理以Unicode形式存储的信息，所以从抽象类Reader和Writer中继承出来了一个专门用于处理Unicode
字符的单独的类层次结构。这些类拥有的读入和写出的操作都是基于两字节的Char值的（即，Unicode码元），而不是基于byte的。

** 读写字节
*** InputStream类有一个抽象方法：
#+begin_src java
  abstract int read();
#+end_src
这个方法将读入一个字节，并返回读入的字节，或者在遇到输入源结尾时返回-1。在设计具体的输入流类时，必须覆盖这个方法
以提供适用的功能，例如，在FileInputStream类中，这个方法将从某个文件中读入一个字节，而System.in(他是一个InputStream的一个
子类的预定义对象)却是从“标准输入”中读入信息，即控制台或重定向的文件。

InputStream类还有若干个非抽象的方法，他们可以读入一个字节数组，或者跳过大量的字节。这些方法都要调用抽象的read方法，
因此各个子类都只需覆盖这一个方法。
